import { BinarySink, BinarySource } from './binary';
import { Sink, Source } from './pipe';
/**
 * only support JSON values
 * e.g. don't support Buffer, Map, Set and Date
 *
 * This is much faster than BinaryObjectSink, but that support full set of javascript objects
 * */
export declare class BinaryJsonSink extends Sink<any> {
    sink: BinarySink;
    constructor(sink: BinarySink);
    write(data: any): void;
    close(): void;
}
/**
 * only support JSON values
 * e.g. don't support Buffer, Map, Set and Date
 *
 * This is much faster than BinaryObjectSource, but that support full set of javascript objects
 * */
export declare class BinaryJsonSource extends Source<any> {
    source: BinarySource;
    constructor(source: BinarySource);
    read(): any;
    close(): void;
    iterator(options?: {
        autoClose?: boolean;
    }): Generator<any, void, unknown>;
}
