import { Memory } from 'compress-json';
import { Value } from 'compress-json/dist/memory';
import { Sink, Source } from './pipe';
/** @deprecated in favour of unique-value.ts for better better disk-efficiency and speed */
export declare class ContinuousCompressJsonSink extends Sink<any> {
    sink: Sink<string>;
    memory: Memory;
    constructor(sink: Sink<string>);
    write(data: any): void;
    close(): void;
}
export declare class ContinuousCompressJsonSource extends Source<any> {
    source: Source<string>;
    values: Value[];
    constructor(source: Source<string>);
    read(): any;
    iterator(options?: {
        autoClose?: boolean;
    }): Generator<any>;
    close(): void;
}
