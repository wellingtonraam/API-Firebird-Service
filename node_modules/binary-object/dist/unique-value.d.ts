/**
 * current only support undefined and primitive json data types
 *
 * supported:
 *   - undefined
 *   - null
 *   - string
 *   - number
 *   - array
 *   - object
 *   - boolean
 *
 * not supported:
 *   - Map
 *   - Set
 *   - Date
 *   - Symbol
 *   - bigint
 *   e.t.c.
 * (doesn't support Map, Set, Date, Symbol, bigint, e.t.c.)
 * */
import { Sink, Source } from './pipe';
export declare class UniqueValueSink extends Sink<any> {
    sink: Sink<string>;
    linesKeys: Map<string, number>;
    constructor(sink: Sink<string>);
    write(data: any): void;
    close(): void;
}
export declare class UniqueValueSource extends Source<any> {
    source: Source<string>;
    generator?: Generator<any>;
    lines: Map<number, string>;
    constructor(source: Source<string>);
    read(): any;
    iterator(options?: {
        autoClose?: boolean;
    }): Generator<any>;
    close(): void;
}
