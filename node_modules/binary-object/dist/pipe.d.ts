export declare abstract class Sink<T> {
    abstract write(data: T): void;
    writeBatch(data: T[]): void;
    abstract close(): void;
}
export declare abstract class Source<T> {
    abstract read(): T;
    readBatch(n: number): T[];
    abstract close(): void;
    abstract iterator(options?: {
        autoClose?: boolean;
    }): Generator<T>;
}
